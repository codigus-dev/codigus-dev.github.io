<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1055px" preserveAspectRatio="none" style="width:683px;height:1055px;" version="1.1" viewBox="0 0 683 1055" width="683px" zoomAndPan="magnify"><defs><filter height="300%" id="fypn23tezzic9" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Interval--><rect fill="#FEFECE" filter="url(#fypn23tezzic9)" height="338.5547" id="Interval" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="6" y="487"/><ellipse cx="75.75" cy="503" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M78.5156,498.875 Q78.6719,498.6563 78.8594,498.5469 Q79.0469,498.4375 79.2656,498.4375 Q79.6406,498.4375 79.875,498.7031 Q80.1094,498.9531 80.1094,499.5625 L80.1094,501.0156 Q80.1094,501.625 79.875,501.8906 Q79.6406,502.1563 79.2656,502.1563 Q78.9219,502.1563 78.7188,501.9531 Q78.5156,501.7656 78.4063,501.25 Q78.3594,500.8906 78.1719,500.7031 Q77.8438,500.3281 77.2344,500.1094 Q76.625,499.8906 76,499.8906 Q75.2344,499.8906 74.5938,500.2188 Q73.9688,500.5469 73.4688,501.2969 Q72.9844,502.0469 72.9844,503.0781 L72.9844,504.1719 Q72.9844,505.4063 73.875,506.2344 Q74.7656,507.0469 76.3594,507.0469 Q77.2969,507.0469 77.9531,506.7969 Q78.3438,506.6406 78.7656,506.2031 Q79.0313,505.9375 79.1719,505.8594 Q79.3281,505.7813 79.5313,505.7813 Q79.8594,505.7813 80.1094,506.0469 Q80.375,506.2969 80.375,506.6406 Q80.375,506.9844 80.0313,507.3906 Q79.5313,507.9688 78.7344,508.2969 Q77.6563,508.75 76.3594,508.75 Q74.8438,508.75 73.6406,508.125 Q72.6563,507.625 71.9688,506.5625 Q71.2813,505.4844 71.2813,504.2031 L71.2813,503.0469 Q71.2813,501.7188 71.8906,500.5781 Q72.5156,499.4219 73.6094,498.8125 Q74.7031,498.1875 75.9375,498.1875 Q76.6719,498.1875 77.3125,498.3594 Q77.9688,498.5156 78.5156,498.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="96.25" y="507.9102">Interval</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="192" y1="519" y2="519"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="12" y="534.4189">double min</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="12" y="548.2549">double max</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="192" y1="554.6719" y2="554.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="12" y="570.0908">Interval(double min, double max)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="12" y="583.9268">Interval()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="12" y="597.7627">Interval(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="12" y="611.5986">double getMin()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="12" y="625.4346">double getMax()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="12" y="639.2705">void set(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="12" y="653.1064">boolean equals(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="12" y="666.9424">double length()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="12" y="680.7783">double getMiddlePoint()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="12" y="694.6143">Interval copy()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="12" y="708.4502">Interval symetric()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="12" y="722.2861">void shift(double amount)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="12" y="736.1221">void scale(double factor)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="12" y="749.958">boolean includes(double value)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="12" y="763.7939">boolean includes(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="12" y="777.6299">Interval intersection(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="12" y="791.4658">Interval shifted(double amount)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="12" y="805.3018">void read()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="12" y="819.1377">String toString()</text><!--class Iterator--><rect fill="#FEFECE" filter="url(#fypn23tezzic9)" height="103.3438" id="Iterator" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="59" y="324"/><ellipse cx="95.15" cy="340" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M97.9156,335.875 Q98.0719,335.6563 98.2594,335.5469 Q98.4469,335.4375 98.6656,335.4375 Q99.0406,335.4375 99.275,335.7031 Q99.5094,335.9531 99.5094,336.5625 L99.5094,338.0156 Q99.5094,338.625 99.275,338.8906 Q99.0406,339.1563 98.6656,339.1563 Q98.3219,339.1563 98.1188,338.9531 Q97.9156,338.7656 97.8063,338.25 Q97.7594,337.8906 97.5719,337.7031 Q97.2438,337.3281 96.6344,337.1094 Q96.025,336.8906 95.4,336.8906 Q94.6344,336.8906 93.9938,337.2188 Q93.3688,337.5469 92.8688,338.2969 Q92.3844,339.0469 92.3844,340.0781 L92.3844,341.1719 Q92.3844,342.4063 93.275,343.2344 Q94.1656,344.0469 95.7594,344.0469 Q96.6969,344.0469 97.3531,343.7969 Q97.7438,343.6406 98.1656,343.2031 Q98.4313,342.9375 98.5719,342.8594 Q98.7281,342.7813 98.9313,342.7813 Q99.2594,342.7813 99.5094,343.0469 Q99.775,343.2969 99.775,343.6406 Q99.775,343.9844 99.4313,344.3906 Q98.9313,344.9688 98.1344,345.2969 Q97.0563,345.75 95.7594,345.75 Q94.2438,345.75 93.0406,345.125 Q92.0563,344.625 91.3688,343.5625 Q90.6813,342.4844 90.6813,341.2031 L90.6813,340.0469 Q90.6813,338.7188 91.2906,337.5781 Q91.9156,336.4219 93.0094,335.8125 Q94.1031,335.1875 95.3375,335.1875 Q96.0719,335.1875 96.7125,335.3594 Q97.3688,335.5156 97.9156,335.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="113.85" y="344.9102">Iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60" x2="175" y1="356" y2="356"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="65" y="371.4189">Node current</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="60" x2="175" y1="377.8359" y2="377.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="65" y="393.2549">Iterator(Node current)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="65" y="407.0908">boolean hasNext()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="65" y="420.9268">Interval next()</text><!--class List--><rect fill="#FEFECE" filter="url(#fypn23tezzic9)" height="255.5391" id="List" style="stroke: #A80036; stroke-width: 1.5;" width="174" x="229.5" y="8"/><ellipse cx="302.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M305.0156,19.875 Q305.1719,19.6563 305.3594,19.5469 Q305.5469,19.4375 305.7656,19.4375 Q306.1406,19.4375 306.375,19.7031 Q306.6094,19.9531 306.6094,20.5625 L306.6094,22.0156 Q306.6094,22.625 306.375,22.8906 Q306.1406,23.1563 305.7656,23.1563 Q305.4219,23.1563 305.2188,22.9531 Q305.0156,22.7656 304.9063,22.25 Q304.8594,21.8906 304.6719,21.7031 Q304.3438,21.3281 303.7344,21.1094 Q303.125,20.8906 302.5,20.8906 Q301.7344,20.8906 301.0938,21.2188 Q300.4688,21.5469 299.9688,22.2969 Q299.4844,23.0469 299.4844,24.0781 L299.4844,25.1719 Q299.4844,26.4063 300.375,27.2344 Q301.2656,28.0469 302.8594,28.0469 Q303.7969,28.0469 304.4531,27.7969 Q304.8438,27.6406 305.2656,27.2031 Q305.5313,26.9375 305.6719,26.8594 Q305.8281,26.7813 306.0313,26.7813 Q306.3594,26.7813 306.6094,27.0469 Q306.875,27.2969 306.875,27.6406 Q306.875,27.9844 306.5313,28.3906 Q306.0313,28.9688 305.2344,29.2969 Q304.1563,29.75 302.8594,29.75 Q301.3438,29.75 300.1406,29.125 Q299.1563,28.625 298.4688,27.5625 Q297.7813,26.4844 297.7813,25.2031 L297.7813,24.0469 Q297.7813,22.7188 298.3906,21.5781 Q299.0156,20.4219 300.1094,19.8125 Q301.2031,19.1875 302.4375,19.1875 Q303.1719,19.1875 303.8125,19.3594 Q304.4688,19.5156 305.0156,19.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="20" x="322.75" y="28.9102">List</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="230.5" x2="402.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="235.5" y="55.4189">Node first</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="235.5" y="69.2549">Node last</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="230.5" x2="402.5" y1="75.6719" y2="75.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="235.5" y="91.0908">List()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="235.5" y="104.9268">Node getFirst()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="235.5" y="118.7627">Node getLast()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="235.5" y="132.5986">void setFirst(Node first)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="235.5" y="146.4346">void setEnd(Node last)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="235.5" y="160.2705">boolean isEmpty()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="235.5" y="174.1064">void insertFirst(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="235.5" y="187.9424">void insertLast(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="235.5" y="201.7783">Interval removeFirst()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="235.5" y="215.6143">Interval removeLast()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="235.5" y="229.4502">boolean includes(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="235.5" y="243.2861">Iterator getIterator()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="235.5" y="257.1221">void writeln()</text><!--class Node--><rect fill="#FEFECE" filter="url(#fypn23tezzic9)" height="158.6875" id="Node" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="47" y="886"/><ellipse cx="153.25" cy="902" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M156.0156,897.875 Q156.1719,897.6563 156.3594,897.5469 Q156.5469,897.4375 156.7656,897.4375 Q157.1406,897.4375 157.375,897.7031 Q157.6094,897.9531 157.6094,898.5625 L157.6094,900.0156 Q157.6094,900.625 157.375,900.8906 Q157.1406,901.1563 156.7656,901.1563 Q156.4219,901.1563 156.2188,900.9531 Q156.0156,900.7656 155.9063,900.25 Q155.8594,899.8906 155.6719,899.7031 Q155.3438,899.3281 154.7344,899.1094 Q154.125,898.8906 153.5,898.8906 Q152.7344,898.8906 152.0938,899.2188 Q151.4688,899.5469 150.9688,900.2969 Q150.4844,901.0469 150.4844,902.0781 L150.4844,903.1719 Q150.4844,904.4063 151.375,905.2344 Q152.2656,906.0469 153.8594,906.0469 Q154.7969,906.0469 155.4531,905.7969 Q155.8438,905.6406 156.2656,905.2031 Q156.5313,904.9375 156.6719,904.8594 Q156.8281,904.7813 157.0313,904.7813 Q157.3594,904.7813 157.6094,905.0469 Q157.875,905.2969 157.875,905.6406 Q157.875,905.9844 157.5313,906.3906 Q157.0313,906.9688 156.2344,907.2969 Q155.1563,907.75 153.8594,907.75 Q152.3438,907.75 151.1406,907.125 Q150.1563,906.625 149.4688,905.5625 Q148.7813,904.4844 148.7813,903.2031 L148.7813,902.0469 Q148.7813,900.7188 149.3906,899.5781 Q150.0156,898.4219 151.1094,897.8125 Q152.2031,897.1875 153.4375,897.1875 Q154.1719,897.1875 154.8125,897.3594 Q155.4688,897.5156 156.0156,897.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="173.75" y="906.9102">Node</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48" x2="297" y1="918" y2="918"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="53" y="933.4189">Node previous</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="53" y="947.2549">Node next</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="48" x2="297" y1="953.6719" y2="953.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="53" y="969.0908">Node(Node previous, Interval interval, Node mext)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="53" y="982.9268">Node getPrevious()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="53" y="996.7627">Node getNext()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="53" y="1010.5986">void setPrevious(Node previous)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="53" y="1024.4346">void setNext(Node next)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="53" y="1038.2705">Interval getInterval()</text><!--class SentinelList--><rect fill="#FEFECE" filter="url(#fypn23tezzic9)" height="61.8359" id="SentinelList" style="stroke: #A80036; stroke-width: 1.5;" width="174" x="299.5" y="344.5"/><ellipse cx="349.75" cy="360.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M352.5156,356.375 Q352.6719,356.1563 352.8594,356.0469 Q353.0469,355.9375 353.2656,355.9375 Q353.6406,355.9375 353.875,356.2031 Q354.1094,356.4531 354.1094,357.0625 L354.1094,358.5156 Q354.1094,359.125 353.875,359.3906 Q353.6406,359.6563 353.2656,359.6563 Q352.9219,359.6563 352.7188,359.4531 Q352.5156,359.2656 352.4063,358.75 Q352.3594,358.3906 352.1719,358.2031 Q351.8438,357.8281 351.2344,357.6094 Q350.625,357.3906 350,357.3906 Q349.2344,357.3906 348.5938,357.7188 Q347.9688,358.0469 347.4688,358.7969 Q346.9844,359.5469 346.9844,360.5781 L346.9844,361.6719 Q346.9844,362.9063 347.875,363.7344 Q348.7656,364.5469 350.3594,364.5469 Q351.2969,364.5469 351.9531,364.2969 Q352.3438,364.1406 352.7656,363.7031 Q353.0313,363.4375 353.1719,363.3594 Q353.3281,363.2813 353.5313,363.2813 Q353.8594,363.2813 354.1094,363.5469 Q354.375,363.7969 354.375,364.1406 Q354.375,364.4844 354.0313,364.8906 Q353.5313,365.4688 352.7344,365.7969 Q351.6563,366.25 350.3594,366.25 Q348.8438,366.25 347.6406,365.625 Q346.6563,365.125 345.9688,364.0625 Q345.2813,362.9844 345.2813,361.7031 L345.2813,360.5469 Q345.2813,359.2188 345.8906,358.0781 Q346.5156,356.9219 347.6094,356.3125 Q348.7031,355.6875 349.9375,355.6875 Q350.6719,355.6875 351.3125,355.8594 Q351.9688,356.0156 352.5156,356.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="370.25" y="365.4102">SentinelList</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="300.5" x2="472.5" y1="376.5" y2="376.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="300.5" x2="472.5" y1="384.5" y2="384.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="305.5" y="399.9189">boolean includes(Interval interval)</text><!--class Set--><rect fill="#FEFECE" filter="url(#fypn23tezzic9)" height="103.3438" id="Set" style="stroke: #A80036; stroke-width: 1.5;" width="164" x="508.5" y="324"/><ellipse cx="577.25" cy="340" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M580.0156,335.875 Q580.1719,335.6563 580.3594,335.5469 Q580.5469,335.4375 580.7656,335.4375 Q581.1406,335.4375 581.375,335.7031 Q581.6094,335.9531 581.6094,336.5625 L581.6094,338.0156 Q581.6094,338.625 581.375,338.8906 Q581.1406,339.1563 580.7656,339.1563 Q580.4219,339.1563 580.2188,338.9531 Q580.0156,338.7656 579.9063,338.25 Q579.8594,337.8906 579.6719,337.7031 Q579.3438,337.3281 578.7344,337.1094 Q578.125,336.8906 577.5,336.8906 Q576.7344,336.8906 576.0938,337.2188 Q575.4688,337.5469 574.9688,338.2969 Q574.4844,339.0469 574.4844,340.0781 L574.4844,341.1719 Q574.4844,342.4063 575.375,343.2344 Q576.2656,344.0469 577.8594,344.0469 Q578.7969,344.0469 579.4531,343.7969 Q579.8438,343.6406 580.2656,343.2031 Q580.5313,342.9375 580.6719,342.8594 Q580.8281,342.7813 581.0313,342.7813 Q581.3594,342.7813 581.6094,343.0469 Q581.875,343.2969 581.875,343.6406 Q581.875,343.9844 581.5313,344.3906 Q581.0313,344.9688 580.2344,345.2969 Q579.1563,345.75 577.8594,345.75 Q576.3438,345.75 575.1406,345.125 Q574.1563,344.625 573.4688,343.5625 Q572.7813,342.4844 572.7813,341.2031 L572.7813,340.0469 Q572.7813,338.7188 573.3906,337.5781 Q574.0156,336.4219 575.1094,335.8125 Q576.2031,335.1875 577.4375,335.1875 Q578.1719,335.1875 578.8125,335.3594 Q579.4688,335.5156 580.0156,335.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="18" x="597.75" y="344.9102">Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="509.5" x2="671.5" y1="356" y2="356"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="509.5" x2="671.5" y1="364" y2="364"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="514.5" y="379.4189">void insertFirst(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="514.5" y="393.2549">void insertLast(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="514.5" y="407.0908">Set union(Set set)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="514.5" y="420.9268">Set intersection(Set set)</text><!--link Interval to Node--><path d="M144.33,846.05 C147.63,859.89 150.82,873.33 153.81,885.88 " fill="none" id="Interval-Node" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="137.45,847.34,139.63,826.27,151.07,844.11,137.45,847.34" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to SentinelList--><path d="M359.71,283.6 C366.46,306.5 372.78,327.94 377.58,344.24 " fill="none" id="List-SentinelList" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="352.9,285.26,353.96,264.09,366.33,281.3,352.9,285.26" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to Set--><path d="M418.86,225.72 C457.13,258.9 499.27,295.42 532.22,323.98 " fill="none" id="List-Set" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="414.1,230.86,403.57,212.47,423.27,220.28,414.1,230.86" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Iterator to Interval--><path d="M114.24,427.02 C113.2,443.17 111.98,462.03 110.7,481.89 " fill="none" id="Iterator-Interval" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="110.37,486.95,114.9532,478.2325,110.6988,481.9608,106.9705,477.7064,110.37,486.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to Node--><path d="M290.4,277.32 C287.65,293.05 284.96,308.86 282.5,324 C246.33,546.47 256.41,605.33 210.5,826 C207.33,841.26 203.44,857.32 199.37,872.88 " fill="none" id="List-Node" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="195.93,885.81,202.1106,878.1419,197.2163,880.9783,194.3799,876.0839,195.93,885.81" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="197.2163" x2="199.275" y1="880.9783" y2="873.25"/><polygon fill="#FFFFFF" points="292.72,264.14,287.7388,269.3542,290.6361,275.9577,295.6173,270.7435,292.72,264.14" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to Iterator--><path d="M229.22,241.17 C206.51,268.27 182.94,296.4 163.34,319.79 " fill="none" id="List-Iterator" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="159.98,323.8,168.8209,319.4597,163.1866,319.9636,162.6827,314.3292,159.98,323.8" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

class Interval {
	double min
	double max
	 Interval(double min, double max)
	 Interval()
	 Interval(Interval interval)
	 double getMin()
	 double getMax()
	 void set(Interval interval)
	 boolean equals(Interval interval)
	 double length()
	 double getMiddlePoint()
	 Interval copy()
	 Interval symetric()
	 void shift(double amount)
	 void scale(double factor)
	 boolean includes(double value)
	 boolean includes(Interval interval)
	 Interval intersection(Interval interval)
	 Interval shifted(double amount)
	 void read()
	 String toString()
}

class Iterator {
	 Node current
	 Iterator(Node current)
	 boolean hasNext()
	 Interval next()
}

class List {
	 Node first
	 Node last
	 List()
	 Node getFirst()
	 Node getLast()
	 void setFirst(Node first)
	 void setEnd(Node last)
	 boolean isEmpty()
	 void insertFirst(Interval interval)
	 void insertLast(Interval interval)
	 Interval removeFirst()
	 Interval removeLast()
	 boolean includes(Interval interval)
	 Iterator getIterator()
	 void writeln()
}

class Node extends Interval {
	 Node previous
	 Node next
	 Node(Node previous, Interval interval, Node mext)
	 Node getPrevious()
	 Node getNext()
	 void setPrevious(Node previous)
	 void setNext(Node next)
	 Interval getInterval()
}

class SentinelList extends List {
	 boolean includes(Interval interval)
}

class Set extends List {
	 void insertFirst(Interval interval)
	 void insertLast(Interval interval)
	 Set union(Set set)
	 Set intersection(Set set)
}

Iterator -down-> Interval
List o-down-> Node
List .down.> Iterator
@enduml

PlantUML version 1.2019.05(Sat Apr 20 18:45:36 CEST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 11.0.14+8-LTS-263
Operating System: Windows 10
OS Version: 10.0
Default Encoding: windows-1252
Language: es
Country: ES
--></g></svg>